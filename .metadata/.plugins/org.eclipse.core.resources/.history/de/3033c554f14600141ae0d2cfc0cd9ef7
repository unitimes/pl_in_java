package chessgame;

import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import chessgame.piece.Piece;
import core.Coordinate;

class OpponentsAttackRangeMaker {

	private OpponentsAttackRangeMaker() {		
	}
	static Set<Coordinate> makeOpponentsAttackRange(Map<Coordinate, Piece> board, RecordBoard recordBoard, StatusChecker statusChecker) {
		Set<Coordinate> opponentsAttackRange = new HashSet<Coordinate>();
		board.forEach((k, v) -> {
			manageOpponentsAttackRange(k, v, recordBoard, statusChecker, opponentsAttackRange);
		});
		return opponentsAttackRange;
	}

	private void manageOpponentsAttackRange(Coordinate coordinate, Piece piece, RecordBoard recordBoard, StatusChecker statusChecker, Set<Coordinate> opponentsAttackRange) {
		if (!piece.isYourSide(recordBoard.getSide())) {
			addOpponentsAttackRange(piece.searchMovibleGrids(coordinate,
					statusChecker));
		}
	}

	private void addOpponentsAttackRange(Set<Coordinate> opponentsMovibleGrids) {
		if (opponentsMovibleGrids != null) {
			opponentsAttackRange.addAll(opponentsMovibleGrids);
		}
	}
}