package chessgame;

import java.util.ArrayList;

import chessgame.piece.Pawn;
import core.Coordinate;

public class Board {
	final static int MAX_ROW = 8;
	final static int MAX_COL = 8;
	private Node[][] nodes;
	
	public Board () {
		nodes = new Node[MAX_ROW][MAX_COL];
	}
	
	//for BoardSetter Class
	void setBoard() {
		for(int i = 0; i < MAX_ROW; i++) {
			setNullRow(nodes[i]);
		}
	}
	
	void setNullRow(Node[] nullRow) {
		for(int i = 0; i < MAX_COL; i++) {
			nullRow[i] = null;
		}
	}
	//---------------------------------------//
	
	//for NodeSetter Class
	void setNull(Node targetNode) {
		targetNode.setNode(null);
	}
	
	void setPawn(Node targetNode) {
		targetNode.setNode(new Pawn());
	}
	//---------------------------------------//
	
	public Boolean isPlaced(int row, int col) {
		return nodes[row][col].isPlaced();
	}

	public void searchMovibleGrids(Coordinate coordinate) {
		int row = coordinate.getRow();
		int col = coordinate.getCol();
		ArrayList<Coordinate> movibleGrids;
		
		movibleGrids = nodes[row][col].searchMovibleGrids(row, col, this);
		printGids(movibleGrids);
	}

	private void printGids(ArrayList<Coordinate> movibleGrids) {
		movibleGrids.forEach(g -> g.toString());
	}
}
