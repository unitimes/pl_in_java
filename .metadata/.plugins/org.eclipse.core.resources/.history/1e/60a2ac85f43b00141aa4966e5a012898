package chessgame.piece;

import java.util.Set;

import core.Coordinate;
import chessgame.StatusChecker;
import chessgame.enums.Side;

public class Rook implements Piece {
	CompositeCommon compositePieceCommon;
	int moveCount;

	public Rook(Side side) {
		this.compositePieceCommon = new CompositeCommon(side);
		this.moveCount = 0;
	}

	@Override
	public Boolean isYourSide(Side side) {
		return compositePieceCommon.isYourSide(side);
	}

	@Override
	public String toString() {
		if (isYourSide(Side.BLACK)) {
			return "\u265C";
		}
		return "\u2656";
	}

	@Override
	public Set<Coordinate> searchMovibleGrids(Coordinate pieceToMove,
			StatusChecker statusChecker) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public Boolean isFirstMove() {
		return moveCount == 0;
	}
	
	public void increaseMoveCount() {
		moveCount++;
	}
}
